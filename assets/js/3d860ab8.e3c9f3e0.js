"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[579],{1573:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"InView/index","title":"InView","description":"InView is a visibility detection utility that leverages the IntersectionObserver API to monitor when elements enter or leave the viewport. It provides customizable options for triggering events, delaying visibility changes, and dynamically adding CSS classes to elements based on their visibility state.","source":"@site/docs/InView/index.mdx","sourceDirName":"InView","slug":"/InView/","permalink":"/docs/InView/","draft":false,"unlisted":false,"editUrl":"https://github.com/antonbobrov/vevet/tree/master/docusaurus/docs/InView/index.mdx","tags":[],"version":"current","sidebarPosition":500,"frontMatter":{"sidebar_position":500,"toc_min_heading_level":2,"toc_max_heading_level":6},"sidebar":"tutorialSidebar","previous":{"title":"Cursor","permalink":"/docs/Cursor/"},"next":{"title":"Scrollbar","permalink":"/docs/Scrollbar/"}}');var l=s(4848),t=s(8453);const r={sidebar_position:500,toc_min_heading_level:2,toc_max_heading_level:6},d="InView",o={},c=[{value:"Example",id:"example",level:2},{value:"Props",id:"props",level:2},{value:"Static Props",id:"static-props",level:3},{value:"<code>hasOut</code>",id:"props.hasOut",level:4},{value:"<code>maxInitialDelay</code>",id:"props.maxInitialDelay",level:4},{value:"<code>scrollDirection</code>",id:"props.scrollDirection",level:4},{value:"Mutable Props",id:"mutable-props",level:3},{value:"<code>enabled</code>",id:"props.enabled",level:4},{value:"<code>rootMargin</code>",id:"props.rootMargin",level:4},{value:"Accessors",id:"accessors",level:2},{value:"<code>elements</code>",id:"elements",level:3},{value:"<code>isInitialStart</code>",id:"isinitialstart",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>addElement</code>",id:"addelement",level:3},{value:"<code>removeElement</code>",id:"removeelement",level:3},{value:"<code>updateProps</code>",id:"updateprops",level:3},{value:"<code>destroy</code>",id:"destroy",level:3},{value:"Callbacks",id:"callbacks",level:2},{value:"<code>in</code>",id:"in",level:3},{value:"<code>out</code>",id:"out",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"inview",children:"InView"})}),"\n",(0,l.jsxs)(n.p,{children:["InView is a visibility detection utility that leverages the ",(0,l.jsx)(n.code,{children:"IntersectionObserver"})," API to monitor when elements enter or leave the viewport. It provides customizable options for triggering events, delaying visibility changes, and dynamically adding CSS classes to elements based on their visibility state."]}),"\n",(0,l.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.p,{children:"Explore a live example on CodePen:"}),"\n",(0,l.jsx)("iframe",{height:"600",style:{width:"100%"},scrolling:"no",title:"Vevet Example",src:"https://codepen.io/anton-bobrov/embed/EaaYRmX?default-tab=result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true",children:(0,l.jsxs)(n.p,{children:["See the Pen ",(0,l.jsx)("a",{href:"https://codepen.io/anton-bobrov/pen/EaaYRmX",children:"Vevet Example"})," by Anton Bobrov."]})}),"\n",(0,l.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,l.jsx)(n.h3,{id:"static-props",children:"Static Props"}),"\n",(0,l.jsx)(n.p,{children:"Static properties are set during initialization and cannot be modified later."}),"\n",(0,l.jsx)(n.h4,{id:"props.hasOut",children:(0,l.jsx)(n.code,{children:"hasOut"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Type:"})," ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"true"})]}),"\n",(0,l.jsx)(n.li,{children:"Determines whether elements leaving the viewport should trigger an event."}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"props.maxInitialDelay",children:(0,l.jsx)(n.code,{children:"maxInitialDelay"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Type:"})," ",(0,l.jsx)(n.code,{children:"number"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"1000"})]}),"\n",(0,l.jsx)(n.li,{children:"Sets the maximum delay (in milliseconds) for initial element visibility. Delay is calculated based on element position."}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"props.scrollDirection",children:(0,l.jsx)(n.code,{children:"scrollDirection"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Type:"})," ",(0,l.jsx)(n.code,{children:"'horizontal' | 'vertical'"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"'vertical'"})]}),"\n",(0,l.jsx)(n.li,{children:"Defines the primary scrolling axis used for delay calculations."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"mutable-props",children:"Mutable Props"}),"\n",(0,l.jsxs)(n.p,{children:["Mutable properties can be updated at runtime using ",(0,l.jsx)(n.code,{children:".updateProps()"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"props.enabled",children:(0,l.jsx)(n.code,{children:"enabled"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Type:"})," ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"true"})]}),"\n",(0,l.jsxs)(n.li,{children:["Enables or disables the ",(0,l.jsx)(n.code,{children:"IntersectionObserver"})," instance."]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"props.rootMargin",children:(0,l.jsx)(n.code,{children:"rootMargin"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Type:"})," ",(0,l.jsx)(n.code,{children:"string"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"'0% 0% -5% 0%'"})]}),"\n",(0,l.jsxs)(n.li,{children:["Specifies the root margin offsets for the ",(0,l.jsx)(n.code,{children:"IntersectionObserver"}),", allowing fine-tuned visibility detection."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"accessors",children:"Accessors"}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["All ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.a,{href:"/docs/base/Module/#accessors",children:"Module's accessors"})})," are available in this class."]})}),"\n",(0,l.jsx)(n.h3,{id:"elements",children:(0,l.jsx)(n.code,{children:"elements"})}),"\n",(0,l.jsxs)(n.p,{children:["Type: ",(0,l.jsx)(n.code,{children:"Element[]"})]}),"\n",(0,l.jsx)(n.p,{children:"Returns all elements currently being observed."}),"\n",(0,l.jsx)(n.h3,{id:"isinitialstart",children:(0,l.jsx)(n.code,{children:"isInitialStart"})}),"\n",(0,l.jsxs)(n.p,{children:["Type: ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsx)(n.p,{children:"Indicates whether the observation has started for the first time."}),"\n",(0,l.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["All ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.a,{href:"/docs/base/Module/#methods",children:"Module's methods"})})," are available in this class."]})}),"\n",(0,l.jsx)(n.h3,{id:"addelement",children:(0,l.jsx)(n.code,{children:"addElement"})}),"\n",(0,l.jsxs)(n.p,{children:["Registers an element for visibility observation. If the element has a ",(0,l.jsx)(n.code,{children:"data-in-view-class"})," attribute, the specified class will be applied upon entering the viewport."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const observable = instance.addElement(document.getElementById('element'));\n\n// Stop observing the element\nobservable();\n"})}),"\n",(0,l.jsx)(n.h3,{id:"removeelement",children:(0,l.jsx)(n.code,{children:"removeElement"})}),"\n",(0,l.jsx)(n.p,{children:"Removes an element from observation, preventing further visibility tracking."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"instance.removeElement(document.getElementById('element'));\n"})}),"\n",(0,l.jsx)(n.h3,{id:"updateprops",children:(0,l.jsx)(n.code,{children:"updateProps"})}),"\n",(0,l.jsx)(n.p,{children:"Dynamically updates instance properties."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"instance.updateProps({\n  enabled: false,\n});\n"})}),"\n",(0,l.jsx)(n.h3,{id:"destroy",children:(0,l.jsx)(n.code,{children:"destroy"})}),"\n",(0,l.jsx)(n.p,{children:"Destroys the instance and removes all observers."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"instance.destroy();\n"})}),"\n",(0,l.jsx)(n.h2,{id:"callbacks",children:"Callbacks"}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["All ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.a,{href:"/docs/base/Module/#callbacks",children:"Module's callbacks"})})," are available in this class."]})}),"\n",(0,l.jsx)(n.h3,{id:"in",children:(0,l.jsx)(n.code,{children:"in"})}),"\n",(0,l.jsx)(n.p,{children:"Fires when an element enters the viewport."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const destruct = instance.on('in', ({ element }) => console.log(element, 'entered viewport'));\n\n// Cancel the callback\ndestruct();\n"})}),"\n",(0,l.jsx)(n.h3,{id:"out",children:(0,l.jsx)(n.code,{children:"out"})}),"\n",(0,l.jsx)(n.p,{children:"Fires when an element leaves the viewport."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const destruct = instance.on('out', ({ element }) => console.log(element, 'left viewport'));\n\n// Cancel the callback\ndestruct();\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var i=s(6540);const l={},t=i.createContext(l);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);