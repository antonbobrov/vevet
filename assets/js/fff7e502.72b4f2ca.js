"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[450],{2731:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"components/Timeline/index","title":"Timeline","description":"A simple timeline class for managing animations with easing and precise progress control.","source":"@site/docs/components/Timeline/index.mdx","sourceDirName":"components/Timeline","slug":"/components/Timeline/","permalink":"/docs/components/Timeline/","draft":false,"unlisted":false,"editUrl":"https://github.com/antonbobrov/vevet/tree/master/docusaurus/docs/components/Timeline/index.mdx","tags":[],"version":"current","frontMatter":{"toc_min_heading_level":2,"toc_max_heading_level":6},"sidebar":"tutorialSidebar","previous":{"title":"Swipe","permalink":"/docs/components/Swipe/"},"next":{"title":"utils","permalink":"/docs/utils"}}');var l=s(4848),r=s(8453);const t={toc_min_heading_level:2,toc_max_heading_level:6},d="Timeline",a={},c=[{value:"Example",id:"example",level:2},{value:"Props",id:"props",level:2},{value:"Mutable Props",id:"mutable-props",level:3},{value:"<code>duration</code>",id:"props.duration",level:4},{value:"<code>easing</code>",id:"props.easing",level:4},{value:"Accessors",id:"accessors",level:2},{value:"duration",id:"duration",level:3},{value:"eased",id:"eased",level:3},{value:"isPaused",id:"ispaused",level:3},{value:"isPlaying",id:"isplaying",level:3},{value:"isReversed",id:"isreversed",level:3},{value:"progress",id:"progress",level:3},{value:"Methods",id:"methods",level:2},{value:"pause",id:"pause",level:3},{value:"play",id:"play",level:3},{value:"reset",id:"reset",level:3},{value:"reverse",id:"reverse",level:3},{value:"Callbacks",id:"callbacks",level:2},{value:"start",id:"start",level:3},{value:"update",id:"update",level:3},{value:"end",id:"end",level:3}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"timeline",children:"Timeline"})}),"\n",(0,l.jsx)(n.p,{children:"A simple timeline class for managing animations with easing and precise progress control."}),"\n",(0,l.jsx)(n.p,{children:"It provides methods for playing, reversing, pausing, and resetting the timeline."}),"\n",(0,l.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.p,{children:"Explore a live example on CodePen:"}),"\n",(0,l.jsx)("iframe",{height:"600",style:{width:"100%"},scrolling:"no",title:"Vevet Example",src:"https://codepen.io/anton-bobrov/embed/jEENKjV?default-tab=result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true",children:(0,l.jsxs)(n.p,{children:["See the Pen ",(0,l.jsx)("a",{href:"https://codepen.io/anton-bobrov/pen/jEENKjV",children:"Vevet Example"})," by Anton Bobrov."]})}),"\n",(0,l.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,l.jsx)(n.h3,{id:"mutable-props",children:"Mutable Props"}),"\n",(0,l.jsxs)(n.p,{children:["Mutable properties can be updated at runtime using ",(0,l.jsx)(n.code,{children:".updateProps()"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"props.duration",children:(0,l.jsx)(n.code,{children:"duration"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Type:"})," ",(0,l.jsx)(n.code,{children:"number"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"1000"})]}),"\n",(0,l.jsx)(n.li,{children:"Timeline duration in milliseconds."}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"props.easing",children:(0,l.jsx)(n.code,{children:"easing"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Type:"})," ",(0,l.jsx)(n.code,{children:"TEasingType"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Default:"})," ",(0,l.jsx)(n.code,{children:"false"})]}),"\n",(0,l.jsx)(n.li,{children:"Easing function for timeline progression. Accepts standard easing types or an array of bezier values."}),"\n",(0,l.jsxs)(n.li,{children:["See ",(0,l.jsx)(n.a,{href:"/docs/utils#easing-types",children:"easing types"})," for more information."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"accessors",children:"Accessors"}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["All ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.a,{href:"/docs/base/Module/#accessors",children:"Module's accessors"})})," are available in this class."]})}),"\n",(0,l.jsx)(n.h3,{id:"duration",children:"duration"}),"\n",(0,l.jsxs)(n.p,{children:["Type: ",(0,l.jsx)(n.code,{children:"number"})]}),"\n",(0,l.jsx)(n.p,{children:"Get the timeline duration, ensuring it is at least 0 ms."}),"\n",(0,l.jsx)(n.h3,{id:"eased",children:"eased"}),"\n",(0,l.jsxs)(n.p,{children:["Type: ",(0,l.jsx)(n.code,{children:"number"})]}),"\n",(0,l.jsx)(n.p,{children:"Get the eased progress of the timeline, derived from the easing function."}),"\n",(0,l.jsx)(n.h3,{id:"ispaused",children:"isPaused"}),"\n",(0,l.jsxs)(n.p,{children:["Type: ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsx)(n.p,{children:"Whether the timeline is paused."}),"\n",(0,l.jsx)(n.h3,{id:"isplaying",children:"isPlaying"}),"\n",(0,l.jsxs)(n.p,{children:["Type: ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsx)(n.p,{children:"Whether the timeline is currently playing."}),"\n",(0,l.jsx)(n.h3,{id:"isreversed",children:"isReversed"}),"\n",(0,l.jsxs)(n.p,{children:["Type: ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsx)(n.p,{children:"Whether the timeline is reversed (progress decreases over time)."}),"\n",(0,l.jsx)(n.h3,{id:"progress",children:"progress"}),"\n",(0,l.jsxs)(n.p,{children:["Type: ",(0,l.jsx)(n.code,{children:"number"})]}),"\n",(0,l.jsx)(n.p,{children:"Get or set the linear progress of the timeline. Setting this triggers an update and associated callbacks."}),"\n",(0,l.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["All ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.a,{href:"/docs/base/Module/#methods",children:"Module's methods"})})," are available in this class."]})}),"\n",(0,l.jsx)(n.h3,{id:"pause",children:"pause"}),"\n",(0,l.jsx)(n.p,{children:"Pause the timeline, halting progress without resetting it."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"instance.pause();\n"})}),"\n",(0,l.jsx)(n.h3,{id:"play",children:"play"}),"\n",(0,l.jsx)(n.p,{children:"Play the timeline, advancing progress toward completion. Does nothing if the timeline is destroyed or already completed."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"instance.play();\n"})}),"\n",(0,l.jsx)(n.h3,{id:"reset",children:"reset"}),"\n",(0,l.jsx)(n.p,{children:"Reset the timeline to the beginning (progress = 0)."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"instance.reset();\n"})}),"\n",(0,l.jsx)(n.h3,{id:"reverse",children:"reverse"}),"\n",(0,l.jsx)(n.p,{children:"Reverse the timeline, moving progress toward the start. Does nothing if the timeline is destroyed or already at the start."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"instance.reverse();\n"})}),"\n",(0,l.jsx)(n.h2,{id:"callbacks",children:"Callbacks"}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["All ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.a,{href:"/docs/base/Module/#callbacks",children:"Module's callbacks"})})," are available in this class."]})}),"\n",(0,l.jsx)(n.h3,{id:"start",children:"start"}),"\n",(0,l.jsx)(n.p,{children:"Triggered when the timeline starts."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const destruct = instance.on('start', () => console.log('start'));\n\n// Cancel the callback\ndestruct();\n"})}),"\n",(0,l.jsx)(n.h3,{id:"update",children:"update"}),"\n",(0,l.jsx)(n.p,{children:"Triggered during timeline updates with progress values."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const destruct = instance.on('update', ({ progress, eased }) => {\n  console.log('update', progress, eased);\n});\n\n// Cancel the callback\ndestruct();\n"})}),"\n",(0,l.jsx)(n.h3,{id:"end",children:"end"}),"\n",(0,l.jsx)(n.p,{children:"Triggered when the timeline completes."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const destruct = instance.on('end', () => console.log('end'));\n\n// Cancel the callback\ndestruct();\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(6540);const l={},r=i.createContext(l);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);